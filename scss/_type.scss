// Type Defaults
// -------------------------
body {
  font-family: 	    $copy-font;
  color:            $black85;
  font-weight:      300;
  ::-moz-selection { 
    background-color: $purple;
    color:          white;
  }
  ::selection {
    background-color: $purple;
    color:          white;
  }
  strong {
    font-weight:    400;
  }
}

// Header Styles
h1,h2,h3,h4,h5 { 
  font-family: 	    $playfair-display;
  font-weight: 	    900;
  color:            $black85;
  small {
    color:          $black25;
    font-family:    $copy-font;
    font-weight:    400;
  }
}

// Styles
.small { 
  color:            $black45;
  font-weight: 	    400;
}
.big {
// To do
}

// Center block-level type elements within grid within Grid
p,h1,h2,h3,h4,h5 { margin: auto; }

// Fluid Scales
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: 	$min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: 	calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: 	$max-font-size;
      }
    }
  } @else {
    @error "Detected mixed units. Please use the same units for all parameters.";
  }
}

// Line Lenth
p,h1,h2,h3,h4,h5,.nav-max, { width: 100%; }
@media screen and (min-width: $min-line-length) {
  p,h1,h2,h3,h4,h5,#global-nav,#work-nav { width: calc(#{$min-line-length} + #{strip-unit($max-line-length - $min-line-length)} * ((100vw - #{$min-fluid}) / #{strip-unit($max-fluid - $min-fluid)})) };
}
@media screen and (min-width: $max-fluid) {
  p,h1,h2,h3,h4,h5,#global-nav,#work-nav { width: $max-line-length; }
}


h1,h2,h3,h4,h5 { padding: 0; line-height: 1.25; }
p,span,td,th { padding: 0; line-height: 1.5; }

body{
  p,span { font-size: $mod_1 *1rem; }
  h1{ font-size: $mod_1*$mod_1*$mod_1*$mod_1 *1rem; }
  h2{ font-size: $mod_1*$mod_1*$mod_1 *1rem; }
  h3{ font-size: $mod_1*$mod_1 *1rem; }
  h4{ font-size: $mod_1 *1rem; }
  h5{ font-size: 1rem; }
  .small { font-size: 1/$mod_1 *1rem; }

  p,span,td,th {
    @include fluid-type($min-fluid, $max-fluid, 1rem, $mod_2 *1rem);	
  }

  h1 { 
    @include fluid-type($min-fluid, $max-fluid, $mod_1*$mod_1*$mod_1*$mod_1*$mod_1 *1rem, $mod_2*$mod_2*$mod_2*$mod_2*$mod_2 *1rem);
  }

  h2 { 
    @include fluid-type($min-fluid, $max-fluid, $mod_1*$mod_1*$mod_1*$mod_1 *1rem, $mod_2*$mod_2*$mod_2*$mod_2 *1rem);
  }

  h3 { 
    @include fluid-type($min-fluid, $max-fluid, $mod_1*$mod_1*$mod_1 *1rem, $mod_2*$mod_2*$mod_2 *1rem);
  }

  h4 { 
    @include fluid-type($min-fluid, $max-fluid, $mod_1*$mod_1 *1rem, $mod_2*$mod_2 *1rem);
  }

  h5 { 
    @include fluid-type($min-fluid, $max-fluid, $mod_1 *1rem, $mod_2 *1rem);
  }

  .small {	
    @include fluid-type($min-fluid, $max-fluid, 1/$mod_1 *1rem, 1rem);
  }
}